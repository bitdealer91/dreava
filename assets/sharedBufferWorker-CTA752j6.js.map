{"version":3,"file":"sharedBufferWorker-CTA752j6.js","sources":["../../src/utils/sharedBufferWorker.js"],"sourcesContent":["// sharedBufferWorker.js - Shared Array Buffer Worker –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏\nexport class SharedBufferWorker {\n  constructor() {\n    this.worker = null;\n    this.initialized = false;\n    this.bufferSize = 1024 * 1024; // 1MB\n    this.init();\n  }\n\n  async init() {\n    try {\n      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É SharedArrayBuffer\n      if (typeof SharedArrayBuffer !== 'undefined') {\n        this.worker = new Worker('/workers/shared-buffer-worker.js');\n        this.worker.onmessage = this.handleMessage.bind(this);\n        this.worker.onerror = this.handleError.bind(this);\n        this.initialized = true;\n        console.log('‚úÖ Shared Buffer Worker initialized');\n      } else {\n        console.warn('‚ö†Ô∏è SharedArrayBuffer not supported');\n      }\n    } catch (error) {\n      console.warn('‚ö†Ô∏è Shared Buffer Worker initialization failed:', error);\n    }\n  }\n\n  handleMessage(event) {\n    const { type, data, id } = event.data;\n    \n    switch (type) {\n      case 'PROCESSING_COMPLETE':\n        console.log('‚úÖ Shared buffer processing complete:', data);\n        break;\n      case 'PROCESSING_PROGRESS':\n        console.log('üìä Shared buffer progress:', data);\n        break;\n      case 'ERROR':\n        console.error('‚ùå Shared buffer error:', data);\n        break;\n      default:\n        console.log('üì® Shared buffer message:', type, data);\n    }\n  }\n\n  handleError(error) {\n    console.error('‚ùå Shared Buffer Worker error:', error);\n  }\n\n  async processFiles(files) {\n    if (!this.initialized) {\n      console.warn('‚ö†Ô∏è Shared Buffer Worker not available, using fallback');\n      return await this.fallbackProcessing(files);\n    }\n\n    return new Promise((resolve, reject) => {\n      const messageId = Date.now();\n      \n      const timeout = setTimeout(() => {\n        console.error('‚è∞ Shared buffer processing timeout');\n        reject(new Error('Processing timeout'));\n      }, 30000); // 30 —Å–µ–∫—É–Ω–¥\n\n      const messageHandler = (event) => {\n        const { type, data, id } = event.data;\n        \n        if (id === messageId) {\n          clearTimeout(timeout);\n          this.worker.removeEventListener('message', messageHandler);\n          \n          if (type === 'PROCESSING_COMPLETE') {\n            resolve(data);\n          } else if (type === 'ERROR') {\n            reject(new Error(data));\n          }\n        }\n      };\n\n      this.worker.addEventListener('message', messageHandler);\n      \n      // –°–æ–∑–¥–∞–µ–º SharedArrayBuffer –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞\n      const fileBuffers = files.map(file => {\n        const buffer = new SharedArrayBuffer(this.bufferSize);\n        return { file, buffer };\n      });\n\n      this.worker.postMessage({\n        type: 'PROCESS_FILES',\n        data: { files: fileBuffers },\n        id: messageId\n      });\n    });\n  }\n\n  async fallbackProcessing(files) {\n    console.log('üîÑ Using fallback processing for files:', files.length);\n    \n    const results = [];\n    for (const file of files) {\n      try {\n        // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞\n        const result = await this.processFileFallback(file);\n        results.push(result);\n      } catch (error) {\n        console.error('‚ùå Fallback processing failed for file:', file.name, error);\n        results.push({ error: error.message });\n      }\n    }\n    \n    return results;\n  }\n\n  async processFileFallback(file) {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      \n      reader.onload = (e) => {\n        const arrayBuffer = e.target.result;\n        const uint8Array = new Uint8Array(arrayBuffer);\n        \n        // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ - –ø–æ–¥—Å—á–µ—Ç –±–∞–π—Ç–æ–≤\n        let sum = 0;\n        for (let i = 0; i < uint8Array.length; i++) {\n          sum += uint8Array[i];\n        }\n        \n        resolve({\n          file: file.name,\n          size: file.size,\n          checksum: sum,\n          processed: true\n        });\n      };\n      \n      reader.onerror = () => {\n        resolve({\n          file: file.name,\n          error: 'File reading failed',\n          processed: false\n        });\n      };\n      \n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  async compressData(data) {\n    if (!this.initialized) {\n      return await this.fallbackCompression(data);\n    }\n\n    return new Promise((resolve, reject) => {\n      const messageId = Date.now();\n      \n      const timeout = setTimeout(() => {\n        console.error('‚è∞ Compression timeout');\n        reject(new Error('Compression timeout'));\n      }, 10000);\n\n      const messageHandler = (event) => {\n        const { type, data: result, id } = event.data;\n        \n        if (id === messageId) {\n          clearTimeout(timeout);\n          this.worker.removeEventListener('message', messageHandler);\n          \n          if (type === 'COMPRESSION_COMPLETE') {\n            resolve(result);\n          } else if (type === 'ERROR') {\n            reject(new Error(result));\n          }\n        }\n      };\n\n      this.worker.addEventListener('message', messageHandler);\n      \n      this.worker.postMessage({\n        type: 'COMPRESS_DATA',\n        data: { data },\n        id: messageId\n      });\n    });\n  }\n\n  async fallbackCompression(data) {\n    try {\n      // –ò—Å–ø–æ–ª—å–∑—É–µ–º CompressionStream API –∫–∞–∫ fallback\n      const cs = new CompressionStream('gzip');\n      const writer = cs.writable.getWriter();\n      const reader = cs.readable.getReader();\n      \n      const uint8Array = new Uint8Array(data);\n      writer.write(uint8Array);\n      writer.close();\n      \n      const chunks = [];\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        chunks.push(value);\n      }\n      \n      const compressed = new Uint8Array(chunks.reduce((acc, chunk) => acc + chunk.length, 0));\n      let offset = 0;\n      for (const chunk of chunks) {\n        compressed.set(chunk, offset);\n        offset += chunk.length;\n      }\n      \n      return compressed.buffer;\n    } catch (error) {\n      console.warn('‚ö†Ô∏è Fallback compression failed:', error);\n      return data; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n    }\n  }\n\n  async decompressData(compressedData) {\n    if (!this.initialized) {\n      return await this.fallbackDecompression(compressedData);\n    }\n\n    return new Promise((resolve, reject) => {\n      const messageId = Date.now();\n      \n      const timeout = setTimeout(() => {\n        console.error('‚è∞ Decompression timeout');\n        reject(new Error('Decompression timeout'));\n      }, 10000);\n\n      const messageHandler = (event) => {\n        const { type, data: result, id } = event.data;\n        \n        if (id === messageId) {\n          clearTimeout(timeout);\n          this.worker.removeEventListener('message', messageHandler);\n          \n          if (type === 'DECOMPRESSION_COMPLETE') {\n            resolve(result);\n          } else if (type === 'ERROR') {\n            reject(new Error(result));\n          }\n        }\n      };\n\n      this.worker.addEventListener('message', messageHandler);\n      \n      this.worker.postMessage({\n        type: 'DECOMPRESS_DATA',\n        data: { data: compressedData },\n        id: messageId\n      });\n    });\n  }\n\n  async fallbackDecompression(compressedData) {\n    try {\n      // –ò—Å–ø–æ–ª—å–∑—É–µ–º DecompressionStream API –∫–∞–∫ fallback\n      const ds = new DecompressionStream('gzip');\n      const writer = ds.writable.getWriter();\n      const reader = ds.readable.getReader();\n      \n      const uint8Array = new Uint8Array(compressedData);\n      writer.write(uint8Array);\n      writer.close();\n      \n      const chunks = [];\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        chunks.push(value);\n      }\n      \n      const decompressed = new Uint8Array(chunks.reduce((acc, chunk) => acc + chunk.length, 0));\n      let offset = 0;\n      for (const chunk of chunks) {\n        decompressed.set(chunk, offset);\n        offset += chunk.length;\n      }\n      \n      return decompressed.buffer;\n    } catch (error) {\n      console.warn('‚ö†Ô∏è Fallback decompression failed:', error);\n      return compressedData; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∂–∞—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ\n    }\n  }\n\n  destroy() {\n    if (this.worker) {\n      this.worker.terminate();\n      this.worker = null;\n    }\n    this.initialized = false;\n  }\n} "],"names":["SharedBufferWorker","error","event","type","data","id","files","resolve","reject","messageId","timeout","messageHandler","fileBuffers","file","buffer","results","result","reader","e","arrayBuffer","uint8Array","sum","i","cs","writer","chunks","done","value","compressed","acc","chunk","offset","compressedData","ds","decompressed"],"mappings":"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"}