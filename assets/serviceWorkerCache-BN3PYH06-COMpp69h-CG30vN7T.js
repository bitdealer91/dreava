class h{constructor(){this.cacheName="dreava-upload-cache-v1",this.initialized=!1,this.init()}async init(){try{"serviceWorker"in navigator&&(await this.registerServiceWorker(),this.initialized=!0)}catch{}}async registerServiceWorker(){try{return location.hostname==="localhost"||location.port?null:await navigator.serviceWorker.register("/sw.js",{scope:"/"})}catch(a){return console.warn("ServiceWorker registration skipped/failed:",a),null}}async cacheUpload(a,e){if(this.initialized)try{const t=await caches.open(this.cacheName),i=`upload_${await this.generateFileHash(a)}`,c=new Response(JSON.stringify(e),{headers:{"Content-Type":"application/json","Cache-Control":"max-age=86400"}});return await t.put(i,c),i}catch{}}async getCachedUpload(a){if(!this.initialized)return null;try{const e=await caches.open(this.cacheName),t=`upload_${await this.generateFileHash(a)}`,i=await e.match(t);return i?await i.json():null}catch{return null}}async cacheMetadata(a,e){if(this.initialized)try{const t=await caches.open(this.cacheName),i=`metadata_${a}`,c=new Response(JSON.stringify(e),{headers:{"Content-Type":"application/json","Cache-Control":"max-age=3600"}});return await t.put(i,c),i}catch{}}async getCachedMetadata(a){if(!this.initialized)return null;try{const e=await caches.open(this.cacheName),t=`metadata_${a}`,i=await e.match(t);return i?await i.json():null}catch{return null}}async clearCache(){if(this.initialized)try{const a=await caches.open(this.cacheName),e=await a.keys();for(const t of e)await a.delete(t)}catch{}}async getCacheStats(){if(!this.initialized)return null;try{const a=await caches.open(this.cacheName),e=await a.keys();let t=0;for(const i of e){const c=await a.match(i);if(c){const n=await c.blob();t+=n.size}}return{entries:e.length,totalSize:t,cacheName:this.cacheName}}catch{return null}}async generateFileHash(a){return new Promise(e=>{const t=new FileReader;t.onload=i=>{const c=i.target.result;crypto.subtle.digest("SHA-256",c).then(n=>{const r=Array.from(new Uint8Array(n)).map(s=>s.toString(16).padStart(2,"0")).join("");e(r)})},t.readAsArrayBuffer(a)})}async cacheNetworkResponse(a,e){if(this.initialized)try{await(await caches.open(this.cacheName)).put(a,e.clone())}catch{}}async getCachedNetworkResponse(a){if(!this.initialized)return null;try{return await(await caches.open(this.cacheName)).match(a)||null}catch{return null}}}export{h as ServiceWorkerCache};
//# sourceMappingURL=serviceWorkerCache-BN3PYH06-COMpp69h-CG30vN7T.js.map
